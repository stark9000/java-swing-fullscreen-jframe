/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fullscreenjframe;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFrame;

/**
 *
 * @author saliya
 */
public class Ui extends javax.swing.JFrame implements KeyListener {

    private static BufferedImage BUFFERED_IMAGE;
    private static Position POSITION;
    private static Dimension SCREEN_SIZE;

    /**
     * Creates new form Ui
     */
    public Ui() {
        initComponents();
        this.addKeyListener(this);
        try {
            BUFFERED_IMAGE = ImageIO.read(getClass().getResourceAsStream("../fullscreenjframe/1.jpg"));
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        POSITION = new Position();
        SCREEN_SIZE = Toolkit.getDefaultToolkit().getScreenSize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            JFrame frame = new Ui();
            frame.getContentPane().setBackground(Color.BLACK);
            frame.setSize((int) SCREEN_SIZE.getWidth(), (int) SCREEN_SIZE.getHeight());
            frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.setVisible(true);
        });
    }

    @Override
    public void keyTyped(KeyEvent e) {

    }

    @Override
    public void keyPressed(KeyEvent e) {
        if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {
            System.exit(0);
        }

        if (e.getKeyCode() == KeyEvent.VK_UP) {
            Animate();
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
 public void Animate() {

        new Thread(() -> {
            for (;;) {
                POSITION.update();
                Graphics2D G = (Graphics2D) Ui.this.getContentPane().getGraphics();
                G.drawImage(BUFFERED_IMAGE, (int) POSITION.DX, (int) POSITION.DY, null);
                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    System.out.println(e);
                }
            }
        }).start();

    }
}

class Position extends Lively {

    public double X = -50;
    public double Y = -50;
    public double R = 20;

    @Override
    public void update() {
        RADIAN = SPEED * T;
        DX = X + R * Math.cos(RADIAN);
        DY = Y + R * Math.sin(RADIAN);
        T += 1;
    }
}

class Lively {

    public double X;
    public double Y;
    public double R = 20;
    public double SPEED = 0.03;
    public double T;
    public double DX;
    public double DY;
    public double RADIAN;

    public void update() {
        RADIAN = SPEED * T;
        DX = X + R * Math.cos(RADIAN);
        DY = Y + R * Math.sin(RADIAN);
        T += 1;
    }

}
